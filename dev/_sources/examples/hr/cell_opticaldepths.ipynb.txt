{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Calculating optical depths along lines of sight in HR"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "import sasktran as sk\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "from sasktran.geometry import VerticalImage\n",
    "import time\n",
    "\n",
    "tanalts_km = np.arange(20, 50, 1)\n",
    "\n",
    "# First recreate our geometry and atmosphere classes\n",
    "geometry = VerticalImage()\n",
    "geometry.from_sza_saa(sza=60, saa=60, lat=0, lon=0, tanalts_km=tanalts_km, mjd=54372, locallook=0,\n",
    "                      satalt_km=600, refalt_km=20)\n",
    "\n",
    "atmosphere = sk.Atmosphere()\n",
    "\n",
    "atmosphere['ozone'] = sk.Species(sk.O3OSIRISRes(), sk.Labow())\n",
    "atmosphere['air'] = sk.Species(sk.Rayleigh(), sk.MSIS90())\n",
    "\n",
    "# And now make the engine\n",
    "engine = sk.EngineHR(geometry=geometry, atmosphere=atmosphere)\n",
    "wavel = [340, 600]\n",
    "engine.wavelengths = wavel\n",
    "\n",
    "cell = engine.cell_optical_depths()\n",
    "\n",
    "plt.plot(cell[0][0]['cell_start_distance'], cell[0][0]['cell_start_optical_depth'])\n",
    "plt.xlabel('Distance from Observer [m]')\n",
    "plt.ylabel('Optical Depth')"
   ]
  }
 ],
 "metadata": {
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": 3
  },
  "orig_nbformat": 2
 },
 "nbformat": 4,
 "nbformat_minor": 2
}